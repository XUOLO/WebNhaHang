
@model WebNhaHang.Models.EF.Product
@{ViewBag.Title = "Product Update";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section naviheader{
    <ul class="navbar-nav">
        <li class="nav-item">
            <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin" class="nav-link">Homepage</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/admin/product" class="nav-link">Product</a>
        </li>
        <li class="nav-item d-none d-sm-inline-block">
            <a href="/home/index" class="nav-link">Shop </a>
        </li>
    </ul>
}

<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Product update</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">product</a></li>
                    <li class="breadcrumb-item active">Update</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">

    <!-- Default box -->
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Product Updates</h3>

        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-12">


                    @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(x => x.id)
                        @Html.HiddenFor(x => x.CreateDate)
                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">General info</a></li>

                                    <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">Seo</a></li>
                                </ul>
                            </div><!-- /.card-header -->
                            <div>
                            </div>
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Product name </label>
                                            @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Product name" })
                                            @Html.ValidationMessageFor(x => x.Title, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Alias</label>
                                            @Html.TextBoxFor(x => x.Alias, new { @class = "form-control", @placeholder = "Alias" })
                                            @Html.ValidationMessageFor(x => x.Alias, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">SKU</label>
                                            @Html.TextBoxFor(x => x.ProductCode, new { @class = "form-control", @placeholder = "Product Code" })
                                            @Html.ValidationMessageFor(x => x.ProductCode, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Category</label>
                                            @Html.DropDownListFor(x => x.ProductCategoryID, ViewBag.ProductCategory as SelectList, "-Select product category-", new { @class = "form-control", @placeholder = "Description" })
                                            @Html.ValidationMessageFor(x => x.ProductCategoryID, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Description</label>
                                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", @placeholder = "Description" })
                                            @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group">
                                            <label for="exampleInputEmail1">Product details</label>
                                            @Html.TextAreaFor(x => x.Detail, new { @class = "form-control", @id = "txtDetail" })
                                            @Html.ValidationMessageFor(x => x.Detail, null, new { @class = "text-danger" })
                                        </div>
                                        <div class="row">
                                            <div class="col-4">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Amount</label>
                                                    @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control", @Value = "1", @onkeypress = "return valideNumber()", @min = "1" })
                                                    @Html.ValidationMessageFor(x => x.Quantity, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-4">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Price</label>
                                                    <input type="text" name="demoPrice" id="demoPrice" value="@Model.Price" class=" form-control auto" data-a-dec="," data-a-sep=". " onkeyup="if(this.value<0){this.value= this.value * -1}">
                                                    @Html.HiddenFor(x => x.Price, new { @class = "", @placeholder = "Price", })
                                                    @Html.ValidationMessageFor(x => x.Price, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-4">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Promotion price</label>
                                                    <input type="text" name="demoPriceSale" id="demoPriceSale" value="@Model.PriceSale" class="form-control auto" data-a-dec="," data-a-sep=". " onkeyup="if(this.value<0){this.value= this.value * -1}">
                                                    @Html.HiddenFor(x => x.PriceSale, new { @class = "", @placeholder = "Promotion price" })
                                                    @Html.ValidationMessageFor(x => x.PriceSale, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-checkbox">
                                                        @Html.CheckBoxFor(x => x.IsActive, new { @class = "custom-control-input", @id = "IsActiveCheckbox", @checked = "checked" })
                                                        <label for="IsActiveCheckbox" class="custom-control-label">Display</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-checkbox">
                                                        @Html.CheckBoxFor(x => x.IsHot, new { @class = "custom-control-input", @id = "IsHomeCheckbox" })
                                                        <label for="IsHomeCheckbox" class="custom-control-label">Hot</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-checkbox">
                                                        @Html.CheckBoxFor(x => x.IsFeature, new { @class = "custom-control-input", @id = "IsFeatureCheckbox" })
                                                        <label for="IsFeatureCheckbox" class="custom-control-label">Featured</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-3">
                                                <div class="form-group">
                                                    <div class="custom-control custom-checkbox">
                                                        @Html.CheckBoxFor(x => x.IsSale, new { @class = "custom-control-input", @id = "IsSaleCheckbox" })
                                                        <label for="IsSaleCheckbox" class="custom-control-label">Promotions</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /.tab-pane -->
                                    <!-- /.tab-pane -->

                                    <div class="tab-pane" id="settings">
                                        <form class="form-horizontal">
                                            <div class="form-group row">
                                                <label for="inputName" class="col-sm-2 col-form-label">SEO Title</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoTitle, new { @class = "form-control", @placeholder = "Seo title" })
                                                    @Html.ValidationMessageFor(x => x.SeoTitle, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputEmail" class="col-sm-2 col-form-label">SeoKeywords</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoKeywords, new { @class = "form-control", @placeholder = "Seo keywords" })
                                                    @Html.ValidationMessageFor(x => x.SeoKeywords, null, new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label for="inputName2" class="col-sm-2 col-form-label">SeoDescription</label>
                                                <div class="col-sm-10">
                                                    @Html.TextBoxFor(x => x.SeoDescription, new { @class = "form-control", @placeholder = "SeoDescription" })
                                                    @Html.ValidationMessageFor(x => x.SeoDescription, null, new { @class = "text-danger" })
                                                </div>
                                            </div>


                                        </form>
                                    </div>
                                    <!-- /.tab-pane -->
                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->
                            <div class="form-group">
                                <button type="submit" class="btn btn-success">Save</button>
                                <a href="/admin/Product" class="btn btn-danger">Back</a>
                            </div>
                        </div>
                        <!-- /.card -->

                    }
                </div>
            </div>
        </div>
        <!-- /.card-body -->
        <div class="card-footer">

        </div>
        <!-- /.card-footer-->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
@section scripts{
    <script>
        function valideNumber() {
            var charCode = (event.which) ? event.which : event.keyCode;
            if (charCode >= 48 && charCode <= 57) {
                return true;
            } else {
                return false;
            }
        }
        $(document).ready(function () {
            $('.auto').autoNumeric('init');
            $('#demoPrice').bind('blur focusout keypress keyup', function () {
                var demoGet = $('#demoPrice').autoNumeric('get');
                $('#Price').val(demoGet);
                $('#Price').autoNumeric('set', demoGet);
            });
            $('#demoPriceSale').bind('blur focusout keypress keyup', function () {
                var demoGet = $('#demoPriceSale').autoNumeric('get');
                $('#PriceSale').val(demoGet);
                $('#PriceSale').autoNumeric('set', demoGet);
            });
            CKEDITOR.replace('txtDetail', {
                customConfig: "/content/ckeditor/config.js",
                extraAllowedContent: 'span',
            });

        });


    </script>
}

